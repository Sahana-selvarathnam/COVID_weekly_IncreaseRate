{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 52,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import csv\n",
    "import requests\n",
    "import numpy as np\n",
    "import json\n",
    "import plotly.express as px\n",
    "import plotly.io as pio\n",
    "\n",
    " \n",
    "#Download_csv_file\n",
    "\n",
    "CSV_URL = \"https://api.covid19india.org/csv/latest/districts.csv\"\n",
    "with requests.Session() as s:\n",
    "    download = s.get(CSV_URL)\n",
    "\n",
    "\n",
    "#Read and write to csv\n",
    "\n",
    "with open('covid19india_districts.csv', 'w') as f:\n",
    "    writer = csv.writer(f)\n",
    "    for line in download.iter_lines():\n",
    "        writer.writerow(line.decode('utf-8').split(','))\n",
    "\n",
    "\n",
    "#Creating Pivot table\n",
    "\n",
    "districts=pd.read_csv('covid19india_districts.csv')\n",
    "table = pd.pivot_table(districts, values='Confirmed', index=['District','State'], columns=['Date'], fill_value=0)\n",
    "table.to_csv(\"pivot.tsv\", sep='\\t')\n",
    "pivot_table=pd.read_csv(\"pivot.tsv\", sep=\"\\t\")\n",
    "\n",
    "\n",
    "#Creating two weeks data\n",
    "\n",
    "two_weeks = pivot_table.T.tail(14).T\n",
    "first_week = two_weeks.T.head(7).T\n",
    "last_week = two_weeks.T.tail(7).T\n",
    "first_column = pivot_table.T.head(2).T\n",
    "\n",
    "first_week['avg_cases_over_7_days'] = first_week.mean(axis=1)\n",
    "last_week['avg_cases_previous_week'] = last_week.mean(axis=1)\n",
    "week1 = first_column.join(first_week)\n",
    "week2 = first_column.join(last_week)\n",
    "\n",
    "merged = week1.merge(week2, on=['District','State'])\n",
    "merged['Increase'] = merged['avg_cases_over_7_days']-merged['avg_cases_previous_week']\n",
    "merged['Rate_of_Increase']=(merged['Increase']/merged['avg_cases_previous_week'])*100\n",
    "\n",
    "\n",
    "searchfor=['Airport Quarantine', 'BSF Camp', 'Capital Complex','Delhi', 'Evacuees', 'Gaurela Pendra Marwahi', \n",
    "           'Italians', 'Other Region', 'Other State', 'Others', 'Railway Quarantine', 'Saitual', 'State Pool', 'Unknown']\n",
    "merged2 = merged[~merged.District.str.contains('|'.join(searchfor))]\n",
    "\n",
    "header=['District','State','avg_cases_over_7_days','avg_cases_previous_week','Increase','Rate_of_Increase']\n",
    "merged2.to_csv(\"final.tsv\", sep='\\t',columns=header)\n",
    "\n",
    "\n",
    "#Creating image\n",
    "pio.renderers.default = 'browser'\n",
    "\n",
    "india_districts = json.load(open(\"india_districts.geojson\", \"r\"))\n",
    "\n",
    "district_id_map = {}\n",
    "for feature in india_districts[\"features\"]:\n",
    "    feature[\"id\"] = feature[\"properties\"][\"dt_code\"]\n",
    "    district_id_map[feature[\"properties\"][\"district\"]] = feature[\"id\"]\n",
    "    \n",
    "\n",
    "df = pd.read_csv(\"final.tsv\",sep='\\t')\n",
    "df[\"id\"] = df[\"District\"].apply(lambda x: district_id_map[x])\n",
    "df.loc[df['Rate_of_Increase'] <= 0, 'Increase_image'] = 0\n",
    "df.loc[df['Rate_of_Increase'] > 0, 'Increase_image'] = df['Rate_of_Increase']\n",
    "\n",
    "\n",
    "fig = px.choropleth(\n",
    "    df,\n",
    "    locations=\"id\",\n",
    "    geojson=india_districts,\n",
    "    color=\"Increase_image\",\n",
    "    hover_name=\"District\",\n",
    "    hover_data=[\"Rate_of_Increase\"],\n",
    "    title=\"Rate of Increase in COVID19 cases per week\",\n",
    "    color_continuous_scale=px.colors.diverging.BrBG,\n",
    "    color_continuous_midpoint=0)\n",
    "fig.update_geos(fitbounds=\"locations\", visible=False)\n",
    "fig.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 45,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
